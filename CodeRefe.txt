https://devicetests.com/get-rtsp-stream-v380-wifi-smart-net-camera-vlc

import cv2

# Replace 'your_ip_address', 'your_username', and 'your_password' with your camera details
ip_address = 'your_ip_address'
username = 'your_username'
password = 'your_password'

# Create the camera URL
camera_url = f"rtsp://{username}:{password}@{ip_address}/video"

# Open the camera
cap = cv2.VideoCapture(camera_url)

while True:
    # Capture frames
    ret, frame = cap.read()

    # Display the frame (you can add PTZ controls here using OpenCV)
    cv2.imshow('IP Camera Feed', frame)

    # Break the loop if 'q' key is pressed
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release the camera and close all windows
cap.release()
cv2.destroyAllWindows()






pip install onvif-zeep


pip install opencv-python


RESTful API


import requests

# Replace 'your_ip_address', 'your_username', and 'your_password' with your camera details
ip_address = 'your_ip_address'
username = 'your_username'
password = 'your_password'

# Example PTZ control command
ptz_command = "http://{}/cgi-bin/ptz.cgi?move=left".format(ip_address)

# Send request with authentication
response = requests.get(ptz_command, auth=(username,Â password))





ONVIF standard

pip install onvif-zeep


from onvif import ONVIFCamera

# Replace 'your_ip_address', 'your_port', 'your_username', and 'your_password' with your camera details
ip_address = 'your_ip_address'
port = 80
username = 'your_username'
password = 'your_password'

# Create an ONVIF camera object
camera = ONVIFCamera(ip_address, port, username, password)

# Example PTZ control
ptz = camera.create_ptz_service()
request = ptz.create_type('ContinuousMove')
request.Velocity.PanTilt._x = 1.0  # Replace with desired pan speed
request.Velocity.PanTilt._y = 0.0  # Replace with desired tilt speed
ptz.ContinuousMove(request)


for controlling